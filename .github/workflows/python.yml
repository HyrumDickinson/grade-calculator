name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # pip install
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install tox and any other packages
        run: pip install tox
      - name: Run tox
        # Run tox using the version of Python in `PATH`
        run: tox -e py
      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      #     continue-on-error: true
      # - name: Test with pytest
      #   run: |
            # pip install pytest
            # pip install pytest-cov
            # pytest tests.py --doctest-modules --junitxml=junit/tests-results.xml --cov=com --cov-report=xml --cov-report=html
      # - name: Upload pytest tests results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: pytest-results-${{ matrix.python-version }}
      #     path: junit/tests-results-${{ matrix.python-version }}.xml
      #   # Use always() to always run this step to publish tests results when there are tests failures
      #   if: ${{ always() }}
      # - name: Build package
      #   run: python -m build
      # - name: Publish package
      #   uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      #   with:
      #     user: __token__
      #     password: ${{ secrets.PYPI_API_TOKEN }}